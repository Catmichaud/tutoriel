{"entries":[{"timestamp":1730908936472,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"0\" y=\"0\""],[0,"></b"]],"start1":67,"start2":67,"length1":20,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"205\" y=\"0\""],[0,"></b"]],"start1":107,"start2":107,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.forever(function () {\n\t\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":33,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,","],[0,"\n    "],[1,"],\n"],[0,"    \""],[-1,"Tutoriel_image.md\",\n        \"Tutoriel_nom.md\",\n        \"Tutoriel_dessin.md\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":219,"start2":219,"length1":131,"length2":44}]}]},{"timestamp":1730909696321,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"Tutroriel_Boutons.md\""],[0,"\n   "]],"start1":305,"start2":305,"length1":40,"length2":8}]}]},{"timestamp":1730910591835,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"Tutoriel_Coeur_batant.md\""],[0,"\n   "]],"start1":337,"start2":337,"length1":44,"length2":8}]}]},{"timestamp":1730910704563,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"Tutoriel_temperature.md\",\n        \"Tutoriel_Veilleuse.md\",\n        \"Tutoriel_temperature_graphique.md\",\n        \"Tutoriel_veilleuse_graphique.md\""],[0,"\n   "]],"start1":373,"start2":373,"length1":164,"length2":8}]}]},{"timestamp":1730911361370,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"Tutoriel_de_a_6_face.md\""],[0,"\n   "]],"start1":529,"start2":529,"length1":43,"length2":8}]}]},{"timestamp":1730911608701,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"Tutoriel_roche_papier_.md\",\n        \"Tutoriel_Decompte_musical.md\",\n        \"Tutoriel_melodie_inspirante.md\""],[0,"\n   "]],"start1":564,"start2":564,"length1":127,"length2":8}]}]},{"timestamp":1730912224281,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"Tutoriel_serrure.md\""],[0,"\n   "]],"start1":683,"start2":683,"length1":39,"length2":8}]}]},{"timestamp":1730912279974,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"Tutoriel_animation_et_compteur.md\",\n        \"Tutoriel_Mot_de_passe.md\",\n        \"Tutoriel_bateau_coule.md\",\n        \"Tutoriel_chauve_souris.md\""],[0,"\n   "]],"start1":714,"start2":714,"length1":162,"length2":8}]}]},{"timestamp":1730912907469,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"Tutoriel_athlele.md\""],[0,"\n   "]],"start1":868,"start2":868,"length1":39,"length2":8}]}]},{"timestamp":1730912951647,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"Tutoriel_nuit_etoilee.md\",\n        \"Tutoriel_Boussole.md\",\n        \"Tutoriel_Message_sercret.md\",\n        \"Tutoriel_test_amitie.md\""],[0,"\n   "]],"start1":899,"start2":899,"length1":150,"length2":8}]}]},{"timestamp":1730913522960,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"art\""],[-1," id=\"!wa[TXcX.YX1gyPhz_M0\""],[0," x=\""]],"start1":100,"start2":100,"length1":34,"length2":8},{"diffs":[[0,"ver\""],[-1," id=\":@9jcXq$+P+?Bi`(eDa|\""],[0," x=\""]],"start1":149,"start2":149,"length1":34,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"Tutoriel_recepteur_signal.md\",\n        \"Tutoriel_emeteur_de_signal.md\"\n    ],\n    \"testFiles\": [\n        \"test.ts\""],[0,"\n   "]],"start1":1041,"start2":1041,"length1":133,"length2":8}]},{"type":"added","filename":"test.ts","value":"// les tests vont ici ; cela ne sera pas compilé si ce paquet est utilisé en tant qu'extension.\n"}]}],"snapshots":[{"timestamp":1730908936471,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Tutoriel\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1730910750277,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block><block type=\"device_forever\" x=\"205\" y=\"0\"></block></xml>","main.ts":"basic.forever(function () {\n\t\n})\n","README.md":"","Tutoriel_image.md":"# Tutoriel image\n\n## @showdialog\n\nProgramme le micro:bit pour qu'il affiche une image.\n\n## Étape 1\n\nSupprime le bloc ``||basic:au démarrage||``.\n\n## Étape 2\n\nAjoute le bloc ``|| basic: montrer l'icône ||`` dans le bloc ``||basic: toujours||``.\n\nSélectionne une icône dans le bloc ``|| basic: montrer l'icône ||``.\n\n\n```blocks\nbasic.forever(function () {\n    basic.showIcon(IconNames.Heart)\n})\n\n```\n\n## Étape 3\n\nTélécharge et teste la programmation.","Tutoriel_nom.md":"\n# Tutoriel mon\n\n## @showdialog\n\nProgramme le micro:bit pour qu'il affiche ton prénom.\n\n## Étape 1\n\nSupprime le bloc ``||basic:au démarrage||``.\n\n## Étape 2\n\nAjoute le bloc ``|| basic: afficher texte ||`` dans le bloc ``||basic: toujours||``.\n\n\n```blocks\n\nbasic.forever(function () {\n    basic.showString(\"Hello!\")\n})\n\n```\n\n## Étape 3\n\nEfface le mot ``|| basic: Hello! ||`` du bloc ``|| basic: afficher texte ||``.\n\nÉcris ton prénom dans le bloc ``|| basic: afficher texte ||`` (ex. : Seb).\n\n```blocks\n\nbasic.forever(function () {\n    basic.showString(\"Hello!\")\n})\n\n```\n## Étape 4\n\nTélécharge et teste la programmation.\n","Tutoriel_dessin.md":"\n# Tutoriel dessin\n\n## @showdialog\n\nProgramme le micro:bit pour qu'il affiche un dessin.\n\n## Étape 1\n\nSupprime le bloc ``||basic:au démarrage||``.\n\n## Étape 2\n\nAjoute le bloc ``|| basic: montrer LEDs ||`` dans le bloc ``||basic: toujours||``.\n\nDessine une image dans le bloc ``|| basic: montrer LEDs ||``.\n\n```blocks\n\nbasic.forever(function () {\n    basic.showLeds(`\n        . . . . .\n        . . . . .\n        . . . . .\n        . . . . .\n        . . . . .\n        `)\n})\n\n```\n\n## Étape 3\n\nTélécharge et teste la programmation.\n","Tutroriel_Boutons.md":"\n# Tutoriel les boutons\n\n## @showdialog\n\nProgramme les boutons A, B et A+B.\n\n## Étape 1\n\nSupprime les blocs ``||basic: au démarrage||`` et ``||basic: toujours||``.\n\n## Étape 2\n\nAjoute le bloc ``|| basic: montrer LEDs ||`` dans le bloc ``||input: lorsque le bouton A est pressé||``.\n\nDessine une épée de Minecraft dans le bloc ``|| basic: montrer LEDs ||``.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    basic.showLeds(`\n        . . . # #\n        # . # # #\n        # # # # .\n        . # # . .\n        # . # # .\n        `)\n})\n\n\n```\n\n## Étape 3\n\nConserve ta séquence de programmation et ajoute-en une nouvelle.\n\nAjoute le bloc ``|| basic: montrer LEDs ||`` dans le bloc ``||input: lorsque le bouton B est pressé||``.\n\nDessine une armure de Minecraft dans le bloc ``|| basic: montrer LEDs ||``.\n\n```blocks\n\ninput.onButtonPressed(Button.B, function () {\n    basic.showLeds(`\n        # # . # #\n        # # # # #\n        . # # # .\n        . # # # .\n        . . # . .\n        `)\n})\n\n\n```\n\n## Étape 4\n\nConserve tes séquences de programmation et ajoute-en une nouvelle.\n\nAjoute le bloc ``|| basic: montrer LEDs ||`` dans le bloc ``||input: lorsque le bouton A+B est pressé||``.\n\nDessine objet de Minecraft dans le bloc ``|| basic: montrer LEDs ||``.\n\n```blocks\n\ninput.onButtonPressed(Button.AB, function () {\n    basic.showLeds(`\n        # # # . #\n        . # . # .\n        . . # . #\n        # # . # #\n        . # . . #\n        `)\n})\n\n\n```\n\n## Étape 5\n\nTélécharge et teste la programmation.\n\n## Étape 6\n\nPourquoi rien ne s'affiche sur le micro:bit ?\n\nQuelle action dois-tu réaliser ?\n","Tutoriel_Coeur_batant.md":"\n# Tutoriel Coeur battant\n\n## @showdialog\n\nProgramme le micro:bit pour qu'il affiche l'animation d'un battement de coeur lorsqu'il est secoué.\n\n## Étape 1\n\nSupprime les blocs ``||basic:au démarrage||`` et ``||basic:toujours||``.\n\n## Étape 2\n\nAjoute le bloc ``|| basic: montrer l'icône ||`` dans le bloc ``||input: lorsque secouer||``.\n\nChoisis l'icône du grand coeur.\n\n```blocks\n\ninput.onGesture(Gesture.Shake, function () {\n    basic.showIcon(IconNames.Heart)\n})\n\n```\n\n## Étape 3\n\nAjoute le bloc ``|| basic: pause (ms) 100 ||`` sous le bloc ``|| basic: montrer l'icône ||``.\n\n\n```blocks\ninput.onGesture(Gesture.Shake, function () {\n    basic.showIcon(IconNames.Heart)\n    basic.pause(100)\n})\n\n```\n\n## Étape 4\n\nAjoute le bloc ``|| basic: montrer l'icône ||`` sous le bloc ``|| basic: pause (ms) 100 ||``.\n\nChoisis l'icône du petit coeur.\n\n```blocks\n\ninput.onGesture(Gesture.Shake, function () {\n    basic.showIcon(IconNames.Heart)\n    basic.pause(100)\n    basic.showIcon(IconNames.SmallHeart)\n})\n\n```\n\n## Étape 5\n\nAjoute le bloc ``|| basic: pause (ms) 100 ||`` sous le bloc ``|| basic: montrer l'icône ||``.\n\n\n```blocks\ninput.onGesture(Gesture.Shake, function () {\n    basic.showIcon(IconNames.Heart)\n    basic.pause(100)\n    basic.showIcon(IconNames.SmallHeart)\n    basic.pause(100)\n})\n\n```\n\n## Étape 6\n\nAjoute le bloc ``|| loops: Répéter  4 fois ||`` dans la séquence de programmation.\n\nRemplace la valeur ``|| loops: 4 ||`` par ``|| loops: 10 ||``\n\n```blocks\n\ninput.onGesture(Gesture.Shake, function () {\n    for (let index = 0; index < 10; index++) {\n        basic.showIcon(IconNames.Heart)\n        basic.pause(100)\n        basic.showIcon(IconNames.SmallHeart)\n        basic.pause(100)\n    }\n})\n\n```\n\n## Étape 7\n\nTélécharge et teste la programmation.\n\n## Étape 8\n\nPourquoi rien ne s'affiche sur le micro:bit ?\n\nQuelle action dois-tu réaliser ?\n","Tutoriel_temperature.md":"\n/**\n* Utilisez ce fichier pour définir des fonctions et des blocs personnalisés.\n* En savoir plus à https://makecode.microbit.org/blocks/custom\n*/\n\nenum MyEnum {\n    //% block=\"one\"\n    One,\n    //% block=\"two\"\n    Two\n}\n\n/**\n * Custom blocks\n */\n//% weight=100 color=#0fbc11 icon=\"\"\nnamespace custom {\n    /**\n     * TODO: describe your function here\n     * @param n describe parameter here, eg: 5\n     * @param s describe parameter here, eg: \"Hello\"\n     * @param e describe parameter here\n     */\n    //% block\n    export function foo(n: number, s: string, e: MyEnum): void {\n        // Add code here\n    }\n\n    /**\n     * TODO: describe your function here\n     * @param value describe value here, eg: 5\n     */\n    //% block\n    export function fib(value: number): number {\n        return value <= 1 ? value : fib(value -1) + fib(value - 2);\n    }\n}\n","pxt.json":"{\n    \"name\": \"Tutoriel\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"Tutoriel_image.md\",\n        \"Tutoriel_nom.md\",\n        \"Tutoriel_dessin.md\",\n        \"Tutroriel_Boutons.md\",\n        \"Tutoriel_Coeur_batant.md\",\n        \"Tutoriel_temperature.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1730912638655,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block><block type=\"device_forever\" x=\"205\" y=\"0\"></block></xml>","main.ts":"basic.forever(function () {\n\t\n})\n","README.md":"","Tutoriel_image.md":"# Tutoriel image\n\n## @showdialog\n\nProgramme le micro:bit pour qu'il affiche une image.\n\n## Étape 1\n\nSupprime le bloc ``||basic:au démarrage||``.\n\n## Étape 2\n\nAjoute le bloc ``|| basic: montrer l'icône ||`` dans le bloc ``||basic: toujours||``.\n\nSélectionne une icône dans le bloc ``|| basic: montrer l'icône ||``.\n\n\n```blocks\nbasic.forever(function () {\n    basic.showIcon(IconNames.Heart)\n})\n\n```\n\n## Étape 3\n\nTélécharge et teste la programmation.","Tutoriel_nom.md":"\n# Tutoriel mon\n\n## @showdialog\n\nProgramme le micro:bit pour qu'il affiche ton prénom.\n\n## Étape 1\n\nSupprime le bloc ``||basic:au démarrage||``.\n\n## Étape 2\n\nAjoute le bloc ``|| basic: afficher texte ||`` dans le bloc ``||basic: toujours||``.\n\n\n```blocks\n\nbasic.forever(function () {\n    basic.showString(\"Hello!\")\n})\n\n```\n\n## Étape 3\n\nEfface le mot ``|| basic: Hello! ||`` du bloc ``|| basic: afficher texte ||``.\n\nÉcris ton prénom dans le bloc ``|| basic: afficher texte ||`` (ex. : Seb).\n\n```blocks\n\nbasic.forever(function () {\n    basic.showString(\"Hello!\")\n})\n\n```\n## Étape 4\n\nTélécharge et teste la programmation.\n","Tutoriel_dessin.md":"\n# Tutoriel dessin\n\n## @showdialog\n\nProgramme le micro:bit pour qu'il affiche un dessin.\n\n## Étape 1\n\nSupprime le bloc ``||basic:au démarrage||``.\n\n## Étape 2\n\nAjoute le bloc ``|| basic: montrer LEDs ||`` dans le bloc ``||basic: toujours||``.\n\nDessine une image dans le bloc ``|| basic: montrer LEDs ||``.\n\n```blocks\n\nbasic.forever(function () {\n    basic.showLeds(`\n        . . . . .\n        . . . . .\n        . . . . .\n        . . . . .\n        . . . . .\n        `)\n})\n\n```\n\n## Étape 3\n\nTélécharge et teste la programmation.\n","Tutroriel_Boutons.md":"\n# Tutoriel les boutons\n\n## @showdialog\n\nProgramme les boutons A, B et A+B.\n\n## Étape 1\n\nSupprime les blocs ``||basic: au démarrage||`` et ``||basic: toujours||``.\n\n## Étape 2\n\nAjoute le bloc ``|| basic: montrer LEDs ||`` dans le bloc ``||input: lorsque le bouton A est pressé||``.\n\nDessine une épée de Minecraft dans le bloc ``|| basic: montrer LEDs ||``.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    basic.showLeds(`\n        . . . # #\n        # . # # #\n        # # # # .\n        . # # . .\n        # . # # .\n        `)\n})\n\n\n```\n\n## Étape 3\n\nConserve ta séquence de programmation et ajoute-en une nouvelle.\n\nAjoute le bloc ``|| basic: montrer LEDs ||`` dans le bloc ``||input: lorsque le bouton B est pressé||``.\n\nDessine une armure de Minecraft dans le bloc ``|| basic: montrer LEDs ||``.\n\n```blocks\n\ninput.onButtonPressed(Button.B, function () {\n    basic.showLeds(`\n        # # . # #\n        # # # # #\n        . # # # .\n        . # # # .\n        . . # . .\n        `)\n})\n\n\n```\n\n## Étape 4\n\nConserve tes séquences de programmation et ajoute-en une nouvelle.\n\nAjoute le bloc ``|| basic: montrer LEDs ||`` dans le bloc ``||input: lorsque le bouton A+B est pressé||``.\n\nDessine objet de Minecraft dans le bloc ``|| basic: montrer LEDs ||``.\n\n```blocks\n\ninput.onButtonPressed(Button.AB, function () {\n    basic.showLeds(`\n        # # # . #\n        . # . # .\n        . . # . #\n        # # . # #\n        . # . . #\n        `)\n})\n\n\n```\n\n## Étape 5\n\nTélécharge et teste la programmation.\n\n## Étape 6\n\nPourquoi rien ne s'affiche sur le micro:bit ?\n\nQuelle action dois-tu réaliser ?\n","Tutoriel_Coeur_batant.md":"\n# Tutoriel Coeur battant\n\n## @showdialog\n\nProgramme le micro:bit pour qu'il affiche l'animation d'un battement de coeur lorsqu'il est secoué.\n\n## Étape 1\n\nSupprime les blocs ``||basic:au démarrage||`` et ``||basic:toujours||``.\n\n## Étape 2\n\nAjoute le bloc ``|| basic: montrer l'icône ||`` dans le bloc ``||input: lorsque secouer||``.\n\nChoisis l'icône du grand coeur.\n\n```blocks\n\ninput.onGesture(Gesture.Shake, function () {\n    basic.showIcon(IconNames.Heart)\n})\n\n```\n\n## Étape 3\n\nAjoute le bloc ``|| basic: pause (ms) 100 ||`` sous le bloc ``|| basic: montrer l'icône ||``.\n\n\n```blocks\ninput.onGesture(Gesture.Shake, function () {\n    basic.showIcon(IconNames.Heart)\n    basic.pause(100)\n})\n\n```\n\n## Étape 4\n\nAjoute le bloc ``|| basic: montrer l'icône ||`` sous le bloc ``|| basic: pause (ms) 100 ||``.\n\nChoisis l'icône du petit coeur.\n\n```blocks\n\ninput.onGesture(Gesture.Shake, function () {\n    basic.showIcon(IconNames.Heart)\n    basic.pause(100)\n    basic.showIcon(IconNames.SmallHeart)\n})\n\n```\n\n## Étape 5\n\nAjoute le bloc ``|| basic: pause (ms) 100 ||`` sous le bloc ``|| basic: montrer l'icône ||``.\n\n\n```blocks\ninput.onGesture(Gesture.Shake, function () {\n    basic.showIcon(IconNames.Heart)\n    basic.pause(100)\n    basic.showIcon(IconNames.SmallHeart)\n    basic.pause(100)\n})\n\n```\n\n## Étape 6\n\nAjoute le bloc ``|| loops: Répéter  4 fois ||`` dans la séquence de programmation.\n\nRemplace la valeur ``|| loops: 4 ||`` par ``|| loops: 10 ||``\n\n```blocks\n\ninput.onGesture(Gesture.Shake, function () {\n    for (let index = 0; index < 10; index++) {\n        basic.showIcon(IconNames.Heart)\n        basic.pause(100)\n        basic.showIcon(IconNames.SmallHeart)\n        basic.pause(100)\n    }\n})\n\n```\n\n## Étape 7\n\nTélécharge et teste la programmation.\n\n## Étape 8\n\nPourquoi rien ne s'affiche sur le micro:bit ?\n\nQuelle action dois-tu réaliser ?\n","Tutoriel_temperature.md":"\n# Tutoriel température\n\n## @showdialog\n\nTransforme le micro:bit en thermomètre.\n\n## Étape 1\n\nSupprime le bloc ``||basic:au démarrage||``.\n\n## Étape 2\n\nCrée une ``||variables: variable||`` et donne-lui le nom ``||variables:température||``.\n\nAjoute le bloc ``||variables: définir température ||`` dans le bloc ``||basic: toujours||``.\n\n```blocks\n\nlet température = 0\nbasic.forever(function () {\n    température = 0\n})\n\n```\n\n## Étape 3\n\nRemplace la valeur ``||variables: 0||`` du bloc ``||variables: définir température ||`` par le bloc ``||input: température||``. \n\n```blocks\n\nlet température = 0\nbasic.forever(function () {\n    température = input.temperature()\n})\n\n```\n\n## Étape 4\n\nAjoute le bloc ``|| basic: montrer nombre ||`` sous le bloc ``|| variables: définir température ||``.\n\n```blocks\n\nlet température = 0\nbasic.forever(function () {\n    température = input.temperature()\n    basic.showNumber(0)\n})\n\n```\n\n## Étape 5\n\nRemplace la valeur ``|| basic: 0||`` du bloc ``|| basic: montrer nombre ||`` par le bloc ``|| variables: température||``. \n\n```blocks\n\nlet température = 0\nbasic.forever(function () {\n    température = input.temperature()\n    basic.showNumber(température)\n})\n```\n\n## Étape 6\n\nAjoute le bloc ``|| basic: pause (ms) 100 ||`` sous le bloc ``|| basic: montrer nombre ||``.\n\nModifie la valeur ``|| basic: 100 ||`` par ``|| basic: pause (ms) 1000 ||``.\n\n```blocks\n\nlet température = 0\nbasic.forever(function () {\n    température = input.temperature()\n    basic.showNumber(température)\n    basic.pause(1000)\n})\n\n```\n\n## Étape 7\n\nAjoute le bloc ``|| basic: effacer l'écran ||`` sous le bloc ``|| basic: pause ||``.\n\n```blocks\n\nlet température = 0\nbasic.forever(function () {\n    température = input.temperature()\n    basic.showNumber(température)\n    basic.pause(1000)\n    basic.clearScreen()\n})\n\n\n```\n\n## Étape 8\n\nTélécharge et teste la programmation.\n\n## @showdialog\n\nManipule doucement le micro:bit...\n\nQue remarques-tu?\n\n","Tutoriel_Veilleuse.md":"# Tutoriel veilleuse\n\n## @showdialog\n\nTransforme le micro:bit en veilleuse.\n\n## Étape 1\n\nSupprime le bloc ``||basic:au démarrage||``.\n\n## Étape 2\n\nCrée une ``||variables: variable||`` et donne-lui le nom ``||variables:Lumière||``.\n\nAjoute le bloc ``||variables: définir Lumière||`` dans le bloc ``||basic: toujours||``.\n\n```blocks\n\nlet Lumière = 0\nbasic.forever(function () {\n    Lumière = 0\n})\n\n```\n\n## Étape 3\n\nRemplace la valeur ``||variables: 0||`` du bloc ``||variables: définir Lumière ||`` par le bloc ``||input: niveau d'intensité lumineuse||``. \n\n\n```blocks\n\nlet Lumière = 0\nbasic.forever(function () {\n    Lumière = input.lightLevel()\n})\n\n```\n\n## Étape 4\n\nAjoute le bloc ``|| logic: si vrai alors sinon ||`` sous le bloc ``|| variables: définir Lumière ||``.\n\n```blocks\n\nlet Lumière = 0\nbasic.forever(function () {\n    Lumière = input.lightLevel()\n    if (true) {\n    \t\n    } else {\n    \t\n    }\n})\n\n```\n\n## Étape 5\n\nRemplace la valeur ``|| logic: vrai ||`` du bloc ``|| logic: si vrai alors sinon ||`` par le bloc ``|| logic: 0 < 0||``. \n\n```blocks\n\nlet Lumière = 0\nbasic.forever(function () {\n    Lumière = input.lightLevel()\n    if (0 < 0) {\n    \t\n    } else {\n    \t\n    }\n})\n\n```\n\n## Étape 6\n\nRemplace la valeur ``|| logic: 0 ||`` à la gauche du bloc ``|| logic: 0 < 0||`` par le bloc ``|| variables: Lumière||``. \n\nRemplace la valeur ``|| logic: 0 ||`` à la droite du bloc ``|| logic: 0 < 0||`` par la valeur ``|| logic: 40 ||``.\n\nLorsque le niveau d'intensité lumieuse est sous 40 dans une pièce, il fait généralement sombre! \n\n```blocks\n\nlet Lumière = 0\nbasic.forever(function () {\n    Lumière = input.lightLevel()\n    if (Lumière < 40) {\n    \t\n    } else {\n    \t\n    }\n})\n\n```\n\n## Étape 7\n\nAjoute le bloc ``|| basic: Montrer LEDs ||`` sous le bloc ``|| logic: si ||``.\n\nRemplis les 25 cases pour activer toutes les LEDs du micro:bit.\n\n```blocks\n\nlet Lumière = 0\nbasic.forever(function () {\n    Lumière = input.lightLevel()\n    if (Lumière < 40) {\n        basic.showLeds(`\n            # # # # #\n            # # # # #\n            # # # # #\n            # # # # #\n            # # # # #\n            `)\n    } else {\n    \t\n    }\n})\n\n```\n\n## Étape 8\n\nAjoute le bloc ``|| basic: montrer LEDs ||`` sous le bloc ``|| logic: sinon ||``.\n\nActive seulement la LED centrale du micro:bit.\n\n```blocks\n\nlet Lumière = 0\nbasic.forever(function () {\n    Lumière = input.lightLevel()\n    if (Lumière < 40) {\n        basic.showLeds(`\n            # # # # #\n            # # # # #\n            # # # # #\n            # # # # #\n            # # # # #\n            `)\n    } else {\n        basic.showLeds(`\n            . . . . .\n            . . . . .\n            . . # . .\n            . . . . .\n            . . . . .\n            `)\n    }\n})\n\n```\n\n## Étape 9\n\nTélécharge et teste la programmation.\n\n## Étape 10\n\nManipule le micro:bit. Ferme les lumières au besoin... \n\nQue remarques-tu ? ","Tutoriel_temperature_graphique.md":"\n# Tutoriel température graphique\n\n## @showdialog\n\nAffiche la température à l'aide d'un graphique.\n\n## Étape 1\n\nCrée une ``||variables: variable||`` et donne lui le nom ``||variables:Graphique||``.\n\nAjoute le bloc ``||variables: définir Graphique||`` dans le bloc ``||basic: au démarrage||``.\n\nLa valeur ``||variables:0||`` demeure la même.\n\n```blocks\n\nlet Graphique = 0\n\n```\n\n## Étape 2\n\nAjoute le bloc ``||logic: si alors||`` dans le bloc ``||basic: toujours||``.\n\n```blocks\n\nbasic.forever(function () {\n    if (true) {\n    \t\n    }\n})\n\n```\n\n## Étape 3\n\nModifie le bloc ``||logic: si alors||``.\n\nRemplace la valeur ``||logic: vrai||`` par le bloc ``||logic: 0 = 0||``.\n\n```blocks\n\nbasic.forever(function () {\n    if (0 == 0) {\n    \t\n    }\n})\n\n```\n\n## Étape 4\n\nModifie le bloc ``||logic: 0 = 0||``.\n\nRemplace la valeur ``||logic: 0||`` de gauche par le bloc ``||variables: Graphique||``.\n\nLa valeur ``||logic: 0||`` de droite demeure la même.\n\n```blocks\n\nbasic.forever(function () {\n    let Graphique = 0\n    if (Graphique == 0) {\n    \t\n    }\n})\n\n\n```\n\n## Étape 5\n\nAjoute le bloc ``||led: tracer graphique||`` dans le bloc ``||logic: si alors||``.\n\n```blocks\n\nbasic.forever(function () {\n    let Graphique = 0\n    if (Graphique == 0) {\n        led.plotBarGraph(\n        0,\n        0\n        )\n    }\n})\n\n```\n\n## Étape 6\n\nModifie le bloc ``||led: tracer graphique||``.\n\nRemplace la valeur ``||led: 0||`` du haut par le bloc ``||input: température||``.\n\nRemplace la valeur ``||led: 0||`` du bas par la valeur ``||led: 50||``.\n\n\n```blocks\n\nbasic.forever(function () {\n    let Graphique = 0\n    if (Graphique == 0) {\n        led.plotBarGraph(\n        input.temperature(),\n        50\n        )\n    }\n})\n\n```\n\n## Étape 7\n\nAjoute le bloc ``||logic: si alors||`` sous le bloc ``||logic: si alors||``.\n\n```blocks\n\nbasic.forever(function () {\n    if (graphique == 0) {\n        led.plotBarGraph(\n        input.temperature(),\n        50\n        )\n    }\n    if (true) {\n    \t\n    }\n})\n\n```\n\n## Étape 8\n\nModifie le bloc ``||logic: si alors||``.\n\nRemplace la valeur ``||logic: vrai||`` par le bloc ``||logic: 0 = 0||``.\n\n```blocks\n\nbasic.forever(function () {\n    if (graphique == 0) {\n        led.plotBarGraph(\n        input.temperature(),\n        50\n        )\n    }\n    if (0 == 0) {\n    \t\n    }\n})\n\n```\n\n## Étape 9\n\nModifie le bloc ``||logic: 0 = 0||``.\n\nRemplace la valeur ``||logic: 0||`` de gauche par le bloc ``||variables: Graphique||``.\n\nRemplace la valeur ``||logic: 0||`` de droite par la valeur ``||logic: 1||``.\n\n```blocks\n\nbasic.forever(function () {\n    if (graphique == 0) {\n        led.plotBarGraph(\n        input.temperature(),\n        50\n        )\n    }\n    if (graphique == 1) {\n    \t\n    }\n})\n\n```\n\n## Étape 10\n\nAjoute le bloc ``||basic:effacer l'écran||`` dans le bloc ``||logic:si alors||``.\n\nAjoute le bloc ``||basic:montrer nombre||`` sous le bloc ``||basic:effacer l'écran||``.\n\nRemplace la valeur ``||basic:0||`` du bloc ``||basic:montrer nombre||`` par le bloc ``||input:température||``.\n\n```blocks\n\nbasic.forever(function () {\n    if (graphique == 0) {\n        led.plotBarGraph(\n        input.temperature(),\n        50\n        )\n    }\n    if (graphique == 1) {\n        basic.clearScreen()\n        basic.showNumber(input.temperature())\n    }\n})\n\n```\n\n## Étape 11\n\nAjoute le bloc ``||basic:pause||`` sous le bloc ``||basic:montrer nombre||``.\n\nRemplace la valeur ``||basic:100||`` par ``||basic:2000||``.\n\n```blocks\n\nbasic.forever(function () {\n    if (graphique == 0) {\n        led.plotBarGraph(\n        input.temperature(),\n        50\n        )\n    }\n    if (graphique == 1) {\n        basic.clearScreen()\n        basic.showNumber(input.temperature())\n        basic.pause(2000)\n    }\n})\n\n```\n\n## Étape 12\n\nAjoute le bloc ``||variables:modifier graphique de 1||`` dans le bloc ``||input:lorsque le bouton A est pressé||``.\n\n```blocks\n\nlet graphique = 0\ninput.onButtonPressed(Button.A, function () {\n    graphique += 1\n})\n\n```\n\n## Étape 13\n\nAjoute le bloc ``||variables:modifier graphique de -1||`` dans le bloc ``||input:lorsque le bouton B est pressé||``.\n\n```blocks\n\nlet graphique = 0\ninput.onButtonPressed(Button.B, function () {\n    graphique += -1\n})\n\n```\n\n## Étape 14\n\nVoici la programmation complète du tutoriel.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    graphique += 1\n})\ninput.onButtonPressed(Button.B, function () {\n    graphique += -1\n})\nlet graphique = 0\nbasic.forever(function () {\n    if (graphique == 0) {\n        led.plotBarGraph(\n        input.temperature(),\n        50\n        )\n    }\n    if (graphique == 1) {\n        basic.clearScreen()\n        basic.showNumber(input.temperature())\n        basic.pause(2000)\n    }\n})\n\n\n```\n","Tutoriel_veilleuse_graphique.md":"# Tutoriel veuilleuse graphique\n\n## @showdialog\n\nAffiche le niveau d'intensité lumineuse à l'aide d'un graphique.\n\n## Étape 1\n\nSupprime le bloc ``||basic:toujours||``\n\n## Étape 2\n\nCrée une ``||variables: variable||`` et donne-lui le nom ``||variables:LED||``.\n\nAjoute le bloc ``||variables: définir LED à 0||`` dans le bloc ``||basic: au démarrage||``.\n\n```blocks\n\nlet LED = 0\n\n```\n\n## Étape 3\n\nRemplace la valeur ``||variables: 0||`` du bloc ``||variables: définir LED||`` par le bloc ``||input: niveau d'intensité lumineuse||``. \n\n```blocks\n\nlet LED = input.lightLevel()\n\n```\n\n## Étape 4\n\nAjoute le bloc ``||led: tracer le graphique||`` dans le bloc ``||input: lorsque le bouton A+B est pressé||``.\n\n```blocks\n\ninput.onButtonPressed(Button.AB, function () {\n    led.plotBarGraph(\n    0,\n    255\n    )\n})\nlet LED = input.lightLevel()\n\n\n```\n\n## Étape 5\n\nRemplace la première valeur ``|| led: 0||`` du bloc ``|| led: tracer le graphique||`` par le bloc ``||variables: LED||``.\n\n```blocks\n\ninput.onButtonPressed(Button.AB, function () {\n    led.plotBarGraph(\n    LED,\n    255\n    )\n})\nlet LED = 0\nLED = input.lightLevel()\n\n```\n\n## Étape 6\n\nRemplace la deuxième valeur ``|| led: 0||`` du bloc ``|| led: tracer le graphique||`` par la valeur ``|| led: 255||``.\n\n```blocks\n\ninput.onButtonPressed(Button.AB, function () {\n    led.plotBarGraph(\n    LED,\n    255\n    )\n})\nlet LED = 0\nLED = input.lightLevel()\n\n\n```\n\n## Étape 7\n\nTélécharge et teste la programmation.","Tutoriel_de_a_6_face.md":"# Tutoriel 9\n\n## @showdialog\n\nTransforme le micro:bit en dé.\n\n## Étape 1\n\nSupprime les blocs ``||basic:au démarrage||`` et ``||basic:toujours||``.\n\n## Étape 2\n\nCrée une ``||variables: variable||`` et donne-lui le nom ``||variables:Nombre||``.\n\nAjoute le bloc ``||variables: définir Nombre||`` dans le bloc ``||input: lorsque secouer||``.\n\n```blocks\n\nlet Nombre = 0\ninput.onGesture(Gesture.Shake, function () {\n    Nombre = 0\n})\n\n```\n\n## Étape 3\n\nRemplace la valeur ``||variables: 0||`` dans le bloc ``||variables: définir nombre||`` par le bloc ``||math: choisir au hasard de 0 à 10||``.\n\nRemplace les valeurs ``||math: 0||`` et ``||math: 10||`` dans le bloc ``||math: choisir au hasard||`` par les valeurs ``||math: 1||`` et ``||math: 6||``.\n\n```blocks\n\nlet Nombre = 0\ninput.onGesture(Gesture.Shake, function () {\n    Nombre = randint(1, 6)\n})\n\n```\n\n## Étape 4\n\nAjoute le bloc ``||logic: si vrai alors||`` sous le bloc ``||input: lorsque secouer||``.\n\n```blocks\n\nlet Nombre = 0\ninput.onGesture(Gesture.Shake, function () {\n    Nombre = randint(1, 6)\n    if (true) {\n        \n    }\n})\n\n```\n\n## Étape 5\n\nAjoute le bloc ``||logic: 0\" = \"0||`` dans le bloc ``||logic: si vrai alors||``.\n\n```blocks\n\nlet Nombre = 0\ninput.onGesture(Gesture.Shake, function () {\n    Nombre = randint(1, 6)\n    if (0 == 0) {\n        \n    }\n})\n\n```\n\n## Étape 6\n\nRemplace la valeur ``||logic: 0||`` de gauche du bloc ``||logic: 0 = 0||`` par le bloc ``||variables:Nombre||``.\n\nRemplace la valeur ``||logic: 0||`` de droite du bloc ``||logic: 0 = 0||`` par la valeur ``||logic: 1||``.\n\n```blocks\n\nlet Nombre = 0\ninput.onGesture(Gesture.Shake, function () {\n    Nombre = randint(1, 6)\n    if (Nombre == 1) {\n        \n    }\n})\n\n```\n\n## Étape 7\n\nAjoute le bloc ``||basic: montrer LEDs||`` sous le bloc ``||logic: si Nombre = 1||``.\n\nDessine le chiffre 1.\n\n```blocks\n\nlet Nombre = 0\ninput.onGesture(Gesture.Shake, function () {\n    Nombre = randint(1, 6)\n    if (Nombre == 1) {\n        basic.showLeds(`\n            . . # . .\n            . # # . .\n            . . # . .\n            . . # . .\n            . # # # .\n            `)\n    }\n})\n\n```\n\n## Étape 8\n\nDupplique le bloc ``||logic: si alors||`` et glisse-le sous le bloc ``||logic: si alors||``.\n\n```blocks\n\nlet Nombre = 0\ninput.onGesture(Gesture.Shake, function () {\n    Nombre = randint(1, 6)\n    if (Nombre == 1) {\n        basic.showLeds(`\n            . . # . .\n            . # # . .\n            . . # . .\n            . . # . .\n            . # # # .\n            `)\n    }\n    if (Nombre == 1) {\n        basic.showLeds(`\n            . . # . .\n            . # # . .\n            . . # . .\n            . . # . .\n            . # # # .\n            `)\n    }\n})\n\n```\n\n## Étape 9\n\nModifie les valeurs du deuxième bloc ``||logic: si alors||``.\n\nRemplace la valeur ``||logic: 1||`` par ``||logic: 2||``.\n\nRemplace le dessin du numéro ``||basic: 1||`` par le dessin du numéro ``||basic: 2||``.\n\n```blocks\n\nlet Nombre = 0\ninput.onGesture(Gesture.Shake, function () {\n    Nombre = randint(1, 6)\n    if (Nombre == 1) {\n        basic.showLeds(`\n            . . # . .\n            . # # . .\n            . . # . .\n            . . # . .\n            . # # # .\n            `)\n    }\n    if (Nombre == 2) {\n        basic.showLeds(`\n            . # # # .\n            . . . # .\n            . # # # .\n            . # . . .\n            . # # # .\n            `)\n    }\n})\n\n```\n\n## @showdialog \n\nLes étapes pour les numéros 3, 4, 5 et 6 du dé ont disparu.\n\nDupplique le bloc ``||logic: si alors||`` et apporte les modifications nécessaires.\n\n## Étape 10\n\nVoici la programmation complète.\n\n```blocks\n\nlet Nombre = 0\ninput.onGesture(Gesture.Shake, function () {\n    Nombre = randint(1, 6)\n    if (Nombre == 1) {\n        basic.showLeds(`\n            . . # . .\n            . # # . .\n            . . # . .\n            . . # . .\n            . # # # .\n            `)\n          }\n    if (Nombre == 2) {\n        basic.showLeds(`\n            . # # # .\n            . . . # .\n            . # # # .\n            . # . . .\n            . # # # .\n            `)\n           }\n    if (Nombre == 3) {\n        basic.showLeds(`\n            . # # # .\n            . . . # .\n            . # # # .\n            . . . # .\n            . # # # .\n            `)\n            }\n    if (Nombre == 4) {\n        basic.showLeds(`\n            . # . # .\n            . # . # .\n            . # # # .\n            . . . # .\n            . . . # .\n            `)\n            }\n    if (Nombre == 5) {\n        basic.showLeds(`\n            . # # # .\n            . # . . .\n            . # # # .\n            . . . # .\n            . # # # .\n            `)\n            }\n    if (Nombre == 6) {\n        basic.showLeds(`\n            . # # # .\n            . # . . .\n            . # # # .\n            . # . # .\n            . # # # .\n            `)\n            }\n})\n\n\n```","Tutoriel_roche_papier_.md":"# Tutoriel Roche, Papier, ciseaux\n\n## @showdialog\n\nTransforme le micro:bit en jeu de Roche, papier, ciseaux... allumette!\n\n## Étape 1\n\nSupprime les blocs ``||basic:au démarrage||`` et ``||basic:toujours||``.\n\n## Étape 2\n\nCrée une ``||variables: variable||`` et donne lui le nom ``||variables:Main||``.\n\nAjoute le bloc ``||variables: définir Main ||`` dans le bloc ``||input: lorsque secouer||``.\n\n```blocks\n\nlet Main = 0\ninput.onGesture(Gesture.Shake, function () {\n    Main = 0\n})\n\n```\n\n## Étape 4\n\nRemplace la valeur ``||variables: 0||`` dans le bloc ``||variables: définir Main||`` par le bloc ``||math: choisir au hasard||``.\n\nRemplace les valeurs ``||math: 0||`` et ``||math: 10||`` dans le bloc ``||math: choisir au hasard||`` par les valeurs ``||math: 1||`` et ``||math: 4||``.\n\n```blocks\n\nlet Main = 0\ninput.onGesture(Gesture.Shake, function () {\n    Main = randint(1, 4)\n})\n\n```\n\n## Étape 4\n\nAjoute le bloc ``||logic: si vrai alors||`` sous le bloc ``||variables: définir Main||``.\n\n```blocks\n\nlet Main = 0\ninput.onGesture(Gesture.Shake, function () {\n    Main = randint(1, 4)\n    if (true) {\n    \t\n    }\n})\n\n```\n\n## Étape 5\n\nRemplace la valeur ``||logic: vrai||`` par le bloc ``||logic: 0 = 0||`` dans le bloc ``||logic: si alors||``.\n\n```blocks\n\nlet Main = 0\ninput.onGesture(Gesture.Shake, function () {\n    Main = randint(1, 4)\n    if (0 == 0) {\n    \t\n    }\n})\n\n```\n\n## Étape 6\n\nRemplace la valeur ``||logic: 0||`` de gauche du bloc ``||logic: 0 = 0||`` par le bloc ``||variables:Main||``.\n\nRemplace la valeur ``||logic: 0||`` de droite du bloc ``||logic: 0 = 0||`` par la valeur ``||logic: 1||``.\n\nLa valeur 1 représente les ``||logic: ciseaux||``.\n\n```blocks\n\nlet Main = 0\ninput.onGesture(Gesture.Shake, function () {\n    Main = randint(1, 4)\n    if (Main == 1) {\n    \t\n    }\n})\n\n```\n\n## Étape 7\n\nAjoute le bloc ``||basic: montrer l'icône||`` sous le bloc ``||logic: si alors ||``.\n\nChoisis ``||basic: les ciseaux||`` comme icône.\n\nAjoute le bloc ``||basic: pause (ms) 2000||`` sous le bloc ``||basic: montrer l'icône||``.\n\nAjoute le bloc ``||basic: effacer l'écran||`` sous le bloc ``||basic: pause (ms) 2000||``.\n\n```blocks\n\nlet Main = 0\ninput.onGesture(Gesture.Shake, function () {\n    Main = randint(1, 4)\n    if (Main == 1) {\n        basic.showIcon(IconNames.Scissors)\n        basic.pause(2000)\n        basic.clearScreen()\n    }\n})\n\n```\n\n## Étape 8\n\nAjoute le bloc ``||basic: pause (ms) 500||`` sous le bloc ``||input: lorsque secouer||``.\n\n```blocks\n\nlet Main = 0\ninput.onGesture(Gesture.Shake, function () {\n    basic.pause(500)\n    Main = randint(1, 4)\n    if (Main == 1) {\n        basic.showIcon(IconNames.Scissors)\n        basic.pause(2000)\n        basic.clearScreen()\n    }\n})\n\n``` \n\n## Étape 9\n\nOups! Les étapes pour programmer la roche, le papier et l'allumette ont disparu.\n\nProgramme le micro:bit pour qu'il puisse afficher les autres éléments du jeu.\n\nDuplique le bloc de programmation ``||logic: si alors||`` à l'aide du clique droit.\n\nModifie les valeurs.\n\nLa valeur 1 représente les ``||logic: ciseaux||``. \n\nLa valeur 2 représente la ``||logic: roche||``.\n\nLa valeur 4 représente le ``||logic: papier||``. \n\nLa valeur 4 représente le ``||logic: allumette||``. \n\n\n## Étape 8\n\nTélécharge et teste la programmation.\n\nSecoue le micro:bit. Que remarques-tu ?\n\n## Étape 8\n\nVoici la programmation complète.\n\n```blocks\n\nlet Main = 0\ninput.onGesture(Gesture.Shake, function () {\n    basic.pause(500)\n    Main = randint(1, 4)\n    if (Main == 1) {\n        basic.showIcon(IconNames.Scissors)\n        basic.pause(2000)\n        basic.clearScreen()\n    }\n    if (Main == 2) {\n        basic.showIcon(IconNames.Target)\n        basic.pause(2000)\n        basic.clearScreen()\n    }\n    if (Main == 3) {\n        basic.showIcon(IconNames.Square)\n        basic.pause(2000)\n        basic.clearScreen()\n    }\n    if (Main == 4) {\n        basic.showIcon(IconNames.Sword)\n        basic.pause(2000)\n        basic.clearScreen()\n    }\n})\n\n```","Tutoriel_Decompte_musical.md":"# Tutoriel décompte musical\n\n## @showdialog\n\nTransforme le micro:bit en jeu de Roche, papier, ciseaux... allumette!\n\n## Étape 1\n\nSupprime les blocs ``||basic:au démarrage||`` et ``||basic:toujours||``.\n\n## Étape 2\n\nCrée une ``||variables: variable||`` et donne lui le nom ``||variables:Main||``.\n\nAjoute le bloc ``||variables: définir Main ||`` dans le bloc ``||input: lorsque secouer||``.\n\n```blocks\n\nlet Main = 0\ninput.onGesture(Gesture.Shake, function () {\n    Main = 0\n})\n\n```\n\n## Étape 4\n\nRemplace la valeur ``||variables: 0||`` dans le bloc ``||variables: définir Main||`` par le bloc ``||math: choisir au hasard||``.\n\nRemplace les valeurs ``||math: 0||`` et ``||math: 10||`` dans le bloc ``||math: choisir au hasard||`` par les valeurs ``||math: 1||`` et ``||math: 4||``.\n\n```blocks\n\nlet Main = 0\ninput.onGesture(Gesture.Shake, function () {\n    Main = randint(1, 4)\n})\n\n```\n\n## Étape 4\n\nAjoute le bloc ``||logic: si vrai alors||`` sous le bloc ``||variables: définir Main||``.\n\n```blocks\n\nlet Main = 0\ninput.onGesture(Gesture.Shake, function () {\n    Main = randint(1, 4)\n    if (true) {\n    \t\n    }\n})\n\n```\n\n## Étape 5\n\nRemplace la valeur ``||logic: vrai||`` par le bloc ``||logic: 0 = 0||`` dans le bloc ``||logic: si alors||``.\n\n```blocks\n\nlet Main = 0\ninput.onGesture(Gesture.Shake, function () {\n    Main = randint(1, 4)\n    if (0 == 0) {\n    \t\n    }\n})\n\n```\n\n## Étape 6\n\nRemplace la valeur ``||logic: 0||`` de gauche du bloc ``||logic: 0 = 0||`` par le bloc ``||variables:Main||``.\n\nRemplace la valeur ``||logic: 0||`` de droite du bloc ``||logic: 0 = 0||`` par la valeur ``||logic: 1||``.\n\nLa valeur 1 représente les ``||logic: ciseaux||``.\n\n```blocks\n\nlet Main = 0\ninput.onGesture(Gesture.Shake, function () {\n    Main = randint(1, 4)\n    if (Main == 1) {\n    \t\n    }\n})\n\n```\n\n## Étape 7\n\nAjoute le bloc ``||basic: montrer l'icône||`` sous le bloc ``||logic: si alors ||``.\n\nChoisis ``||basic: les ciseaux||`` comme icône.\n\nAjoute le bloc ``||basic: pause (ms) 2000||`` sous le bloc ``||basic: montrer l'icône||``.\n\nAjoute le bloc ``||basic: effacer l'écran||`` sous le bloc ``||basic: pause (ms) 2000||``.\n\n```blocks\n\nlet Main = 0\ninput.onGesture(Gesture.Shake, function () {\n    Main = randint(1, 4)\n    if (Main == 1) {\n        basic.showIcon(IconNames.Scissors)\n        basic.pause(2000)\n        basic.clearScreen()\n    }\n})\n\n```\n\n## Étape 8\n\nAjoute le bloc ``||basic: pause (ms) 500||`` sous le bloc ``||input: lorsque secouer||``.\n\n```blocks\n\nlet Main = 0\ninput.onGesture(Gesture.Shake, function () {\n    basic.pause(500)\n    Main = randint(1, 4)\n    if (Main == 1) {\n        basic.showIcon(IconNames.Scissors)\n        basic.pause(2000)\n        basic.clearScreen()\n    }\n})\n\n``` \n\n## Étape 9\n\nOups! Les étapes pour programmer la roche, le papier et l'allumette ont disparu.\n\nProgramme le micro:bit pour qu'il puisse afficher les autres éléments du jeu.\n\nDuplique le bloc de programmation ``||logic: si alors||`` à l'aide du clique droit.\n\nModifie les valeurs.\n\nLa valeur 1 représente les ``||logic: ciseaux||``. \n\nLa valeur 2 représente la ``||logic: roche||``.\n\nLa valeur 4 représente le ``||logic: papier||``. \n\nLa valeur 4 représente le ``||logic: allumette||``. \n\n\n## Étape 8\n\nTélécharge et teste la programmation.\n\nSecoue le micro:bit. Que remarques-tu ?\n\n## Étape 8\n\nVoici la programmation complète.\n\n```blocks\n\nlet Main = 0\ninput.onGesture(Gesture.Shake, function () {\n    basic.pause(500)\n    Main = randint(1, 4)\n    if (Main == 1) {\n        basic.showIcon(IconNames.Scissors)\n        basic.pause(2000)\n        basic.clearScreen()\n    }\n    if (Main == 2) {\n        basic.showIcon(IconNames.Target)\n        basic.pause(2000)\n        basic.clearScreen()\n    }\n    if (Main == 3) {\n        basic.showIcon(IconNames.Square)\n        basic.pause(2000)\n        basic.clearScreen()\n    }\n    if (Main == 4) {\n        basic.showIcon(IconNames.Sword)\n        basic.pause(2000)\n        basic.clearScreen()\n    }\n})\n\n```","Tutoriel_melodie_inspirante.md":"\n# Tutoriel Mélodie inspirante\n\n## @showdialog\n\nCompose une mélodie !\n\n## Étape 1\n\nSupprime les blocs ``||basic: au démarrage ||`` et ``||basic: toujours ||``.\n\n## Étape 2\n\nAjoute le bloc ``||music: régler le tempo à (bpm) 120 ||`` dans le bloc ``||input: lorsque le bouton A est pressé||``.\n\n```blocks\n\nmusic.setTempo(120)\n\n```\n\n## Étape 3\n\nAjoute les blocs ``||music: jouer ton Middle pendant 1 temps ||`` dans le bloc ``||input: lorsque le bouton A est pressé||``.\n\nAttention ! Plusieurs blocs sont différents.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    music.playTone(262, music.beat(BeatFraction.Whole))\n    music.playTone(294, music.beat(BeatFraction.Whole))\n    music.playTone(330, music.beat(BeatFraction.Whole))\n    music.playTone(262, music.beat(BeatFraction.Whole))\n})\n\n```\n\n## Étape 4\n\nAjoute la séquence de notes musicales dans le bloc ``||loops: répéter 2 fois ||``.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    for (let index = 0; index < 2; index++) {\n        music.playTone(262, music.beat(BeatFraction.Whole))\n        music.playTone(294, music.beat(BeatFraction.Whole))\n        music.playTone(330, music.beat(BeatFraction.Whole))\n        music.playTone(262, music.beat(BeatFraction.Whole))\n    }\n})\n\n```\n\n## Étape 5\n\nAjoute les blocs ``||music: jouer ton Middle pendant 1 temps ||`` sous le bloc ``||loops: répéter 2 fois ||``.\n\nAttention ! Plusieurs blocs sont différents.\n\nAttention ! La dernière note joue pendant 2 temps.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    for (let index = 0; index < 2; index++) {\n        music.playTone(262, music.beat(BeatFraction.Whole))\n        music.playTone(294, music.beat(BeatFraction.Whole))\n        music.playTone(330, music.beat(BeatFraction.Whole))\n        music.playTone(262, music.beat(BeatFraction.Whole))\n    }\n    music.playTone(330, music.beat(BeatFraction.Whole))\n    music.playTone(349, music.beat(BeatFraction.Whole))\n    music.playTone(392, music.beat(BeatFraction.Double))\n})\n\n```\n\n## Étape 6\n\nAjoute la séquence de notes musicales dans le bloc ``||loops: répéter 2 fois ||``.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    for (let index = 0; index < 2; index++) {\n        music.playTone(262, music.beat(BeatFraction.Whole))\n        music.playTone(294, music.beat(BeatFraction.Whole))\n        music.playTone(330, music.beat(BeatFraction.Whole))\n        music.playTone(262, music.beat(BeatFraction.Whole))\n    }\n    for (let index = 0; index < 2; index++) {\n        music.playTone(330, music.beat(BeatFraction.Whole))\n        music.playTone(349, music.beat(BeatFraction.Whole))\n        music.playTone(392, music.beat(BeatFraction.Double))\n    }\n})\n\n```\n\n## Étape 7\n\nContinue à programmer la chanson.\n\nRegarde attentivement l'indice, car il y a plusieurs notes à ajouter!\n\nBonne chance!\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    for (let index = 0; index < 2; index++) {\n        music.playTone(262, music.beat(BeatFraction.Whole))\n        music.playTone(294, music.beat(BeatFraction.Whole))\n        music.playTone(330, music.beat(BeatFraction.Whole))\n        music.playTone(262, music.beat(BeatFraction.Whole))\n    }\n    for (let index = 0; index < 2; index++) {\n        music.playTone(330, music.beat(BeatFraction.Whole))\n        music.playTone(349, music.beat(BeatFraction.Whole))\n        music.playTone(392, music.beat(BeatFraction.Double))\n    }\n    for (let index = 0; index < 2; index++) {\n        music.playTone(392, music.beat(BeatFraction.Half))\n        music.playTone(440, music.beat(BeatFraction.Half))\n        music.playTone(392, music.beat(BeatFraction.Half))\n        music.playTone(349, music.beat(BeatFraction.Half))\n        music.playTone(330, music.beat(BeatFraction.Whole))\n        music.playTone(262, music.beat(BeatFraction.Whole))\n    }\n    for (let index = 0; index < 2; index++) {\n        music.playTone(262, music.beat(BeatFraction.Whole))\n        music.playTone(196, music.beat(BeatFraction.Whole))\n        music.playTone(262, music.beat(BeatFraction.Double))\n    }\n})\n```\n\n## Étape 7\n\nTélécharge et teste le programme.\n\nRelis tes écouteurs au micro:bit avec des pinces crocodiles.\n\n","Tutoriel_serrure.md":"\n# Tutoriel serrure\n\n## @showdialog\n\nCompose une mélodie !\n\n## Étape 1\n\nSupprime les blocs ``||basic: au démarrage ||`` et ``||basic: toujours ||``.\n\n## Étape 2\n\nAjoute le bloc ``||music: régler le tempo à (bpm) 120 ||`` dans le bloc ``||input: lorsque le bouton A est pressé||``.\n\n```blocks\n\nmusic.setTempo(120)\n\n```\n\n## Étape 3\n\nAjoute les blocs ``||music: jouer ton Middle pendant 1 temps ||`` dans le bloc ``||input: lorsque le bouton A est pressé||``.\n\nAttention ! Plusieurs blocs sont différents.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    music.playTone(262, music.beat(BeatFraction.Whole))\n    music.playTone(294, music.beat(BeatFraction.Whole))\n    music.playTone(330, music.beat(BeatFraction.Whole))\n    music.playTone(262, music.beat(BeatFraction.Whole))\n})\n\n```\n\n## Étape 4\n\nAjoute la séquence de notes musicales dans le bloc ``||loops: répéter 2 fois ||``.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    for (let index = 0; index < 2; index++) {\n        music.playTone(262, music.beat(BeatFraction.Whole))\n        music.playTone(294, music.beat(BeatFraction.Whole))\n        music.playTone(330, music.beat(BeatFraction.Whole))\n        music.playTone(262, music.beat(BeatFraction.Whole))\n    }\n})\n\n```\n\n## Étape 5\n\nAjoute les blocs ``||music: jouer ton Middle pendant 1 temps ||`` sous le bloc ``||loops: répéter 2 fois ||``.\n\nAttention ! Plusieurs blocs sont différents.\n\nAttention ! La dernière note joue pendant 2 temps.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    for (let index = 0; index < 2; index++) {\n        music.playTone(262, music.beat(BeatFraction.Whole))\n        music.playTone(294, music.beat(BeatFraction.Whole))\n        music.playTone(330, music.beat(BeatFraction.Whole))\n        music.playTone(262, music.beat(BeatFraction.Whole))\n    }\n    music.playTone(330, music.beat(BeatFraction.Whole))\n    music.playTone(349, music.beat(BeatFraction.Whole))\n    music.playTone(392, music.beat(BeatFraction.Double))\n})\n\n```\n\n## Étape 6\n\nAjoute la séquence de notes musicales dans le bloc ``||loops: répéter 2 fois ||``.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    for (let index = 0; index < 2; index++) {\n        music.playTone(262, music.beat(BeatFraction.Whole))\n        music.playTone(294, music.beat(BeatFraction.Whole))\n        music.playTone(330, music.beat(BeatFraction.Whole))\n        music.playTone(262, music.beat(BeatFraction.Whole))\n    }\n    for (let index = 0; index < 2; index++) {\n        music.playTone(330, music.beat(BeatFraction.Whole))\n        music.playTone(349, music.beat(BeatFraction.Whole))\n        music.playTone(392, music.beat(BeatFraction.Double))\n    }\n})\n\n```\n\n## Étape 7\n\nContinue à programmer la chanson.\n\nRegarde attentivement l'indice, car il y a plusieurs notes à ajouter!\n\nBonne chance!\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    for (let index = 0; index < 2; index++) {\n        music.playTone(262, music.beat(BeatFraction.Whole))\n        music.playTone(294, music.beat(BeatFraction.Whole))\n        music.playTone(330, music.beat(BeatFraction.Whole))\n        music.playTone(262, music.beat(BeatFraction.Whole))\n    }\n    for (let index = 0; index < 2; index++) {\n        music.playTone(330, music.beat(BeatFraction.Whole))\n        music.playTone(349, music.beat(BeatFraction.Whole))\n        music.playTone(392, music.beat(BeatFraction.Double))\n    }\n    for (let index = 0; index < 2; index++) {\n        music.playTone(392, music.beat(BeatFraction.Half))\n        music.playTone(440, music.beat(BeatFraction.Half))\n        music.playTone(392, music.beat(BeatFraction.Half))\n        music.playTone(349, music.beat(BeatFraction.Half))\n        music.playTone(330, music.beat(BeatFraction.Whole))\n        music.playTone(262, music.beat(BeatFraction.Whole))\n    }\n    for (let index = 0; index < 2; index++) {\n        music.playTone(262, music.beat(BeatFraction.Whole))\n        music.playTone(196, music.beat(BeatFraction.Whole))\n        music.playTone(262, music.beat(BeatFraction.Double))\n    }\n})\n```\n\n## Étape 7\n\nTélécharge et teste le programme.\n\nRelis tes écouteurs au micro:bit avec des pinces crocodiles.\n","Tutoriel_animation_et_compteur.md":"\n# Tutoriel Animation avec un compteur\n\n## @showdialog\n\nCrée une animation avec un compteur.\n\n## Étape 1\n\nSupprime les blocs ``||basic: au démarrage ||`` et ``||basic: toujours ||``.\n\n## Étape 2\n\nCrée une fonction et donne-lui le nom ``||functions: Animation ||``. Ajoute un ``||variables: nombre ||`` à la fonction.\n\nRegarde l'indice au besoin.\n\n```blocks\n\nfunction Animation (num: number) {\n\t\n}\n\n```\n\n## Étape 3\n\nAjoute le bloc ``||loops: répéter ||`` dans le bloc ``||functions: Animation ||``.\n\nRemplace la valeur ``||loops: 4 ||`` par le bloc ``||variables: num ||``. \n\n\n```blocks\n\nfunction Animation (num: number) {\n    for (let index = 0; index < num; index++) {\n    \t\n    }\n}\n\n```\n\n## Étape 4\n\nAjoute trois blocs ``||basic: montrer l'icône ||`` dans le bloc ``||functions: répéter ||``.\n\nRegarde l'indice au besoin.\n\n```blocks\n\nfunction Animation (num: number) {\n    for (let index = 0; index < num; index++) {\n        basic.showIcon(IconNames.SmallDiamond)\n        basic.showIcon(IconNames.Diamond)\n        basic.showIcon(IconNames.Chessboard)\n    }\n}\n\n```\n\n## Étape 5\n\nAjoute le bloc ``||functions: retourner ||`` sous le bloc ``||functions: répéter ||``.\n\nRemplace la valeur ``||functions: 0 ||`` par le bloc ``||variables: num ||``. \n\nRegarde l'indice au besoin.\n\n```blocks\n\nfunction Animation (num: number) {\n    for (let index = 0; index < num; index++) {\n        basic.showIcon(IconNames.SmallDiamond)\n        basic.showIcon(IconNames.Diamond)\n        basic.showIcon(IconNames.Chessboard)\n    }\n}\n\n```\n\n## Étape 6\n\nAjoute le bloc ``||basic: montrer nombre ||`` dans le bloc ``||input: lorsque le bouton A +  est pressé ||``.\n\n```blocks\n\nfunction Animation (num: number) {\n    for (let index = 0; index < 4; index++) {\n        basic.showIcon(IconNames.SmallDiamond)\n        basic.showIcon(IconNames.Diamond)\n        basic.showIcon(IconNames.Chessboard)\n    }\n    return num\n}\ninput.onButtonPressed(Button.AB, function () {\n    basic.showNumber(0)\n})\n\n\n```\n\n## Étape 7\n\nRemplace la valeur ``||basic: 0 ||`` par le bloc ``||functions: appel Animation ||``.\n\n```blocks\n\nfunction Animation (num: number) {\n    for (let index = 0; index < 4; index++) {\n        basic.showIcon(IconNames.SmallDiamond)\n        basic.showIcon(IconNames.Diamond)\n        basic.showIcon(IconNames.Chessboard)\n    }\n    return num\n}\ninput.onButtonPressed(Button.AB, function () {\n    basic.showNumber(Animation(1))\n})\n\n```\n\n## Étape 8\n\nRemplace la valeur ``||functions: 1 ||`` par le bloc ``||math: choisir au hasard ||``.\n\n```blocks\n\nfunction Animation (num: number) {\n    for (let index = 0; index < 4; index++) {\n        basic.showIcon(IconNames.SmallDiamond)\n        basic.showIcon(IconNames.Diamond)\n        basic.showIcon(IconNames.Chessboard)\n    }\n    return num\n}\ninput.onButtonPressed(Button.AB, function () {\n    basic.showNumber(Animation(1))\n})\n\n```\n\n## Étape 8\n\nRemplace la valeur ``||math: 0 ||`` par la valeur ``||math: 1 ||``.\n\nRemplace la valeur ``||math: 10 ||`` par la valeur ``||math: 5 ||``.\n\n\n```blocks\n\nfunction Animation (num: number) {\n    for (let index = 0; index < 4; index++) {\n        basic.showIcon(IconNames.SmallDiamond)\n        basic.showIcon(IconNames.Diamond)\n        basic.showIcon(IconNames.Chessboard)\n    }\n    return num\n}\ninput.onButtonPressed(Button.AB, function () {\n    basic.showNumber(Animation(randint(1, 5)))\n})\n\n```\n\n## Étape 9\n\nTélécharge le programme dans le micro:bit.\n","Tutoriel_Mot_de_passe.md":"\n# Générateur de mot de passe\n\n## @showdialog\n\nTransforme le micro:bit en générateur de mot de passe.\n\n## Étape 1\n\nSupprime le bloc ``||basic:toujours||``.\n\n## Étape 2\n\nAjoute le bloc ``|| variables: définir liste||`` dans le bloc ``|| basic: au démarrage||``.\n\nRegarde dans l'onglet ``|| arrays: Tableaux||``.\n\nRegarde l'indice au besoin.\n\n```blocks\n\nlet liste = [0, 1]\n\n```\n\n## Étape 3\n\nRenomme le bloc ``|| variables: définir liste||`` par ``|| variables: motdepasse||``.\n\nClique sur la petite flèche du bloc ``|| variables: définir liste||`` pour le renommer.\n\nRegarde l'indice au besoin.\n\n```blocks\n\nlet motdepasse = [0, 1]\n\n```\n\n## Étape 4\n\nRemplace le bloc ``|| arrays: tableau de 0 1||`` par le bloc ``|| arrays: tableau vide||``.\n\nRegarde dans l'onglet ``|| arrays: Tableaux||``.\n\nRegarde l'indice au besoin.\n\n```blocks\n\nlet motdepasse: number[] = []\n\n\n```\n\n## Étape 5\n\nAjoute le bloc ``|| variables: définir liste_de_textes ||`` sous le bloc ``||variables: définir motdepasse||``.\n\nRegarde dans l'onglet ``|| arrays: Tableaux||``.\n\nRegarde l'indice au besoin.\n\n\n```blocks\n\nlet motdepasse: number[] = []\nlet liste_de_textes = [\"a\", \"b\", \"c\"]\n\n```\n\n## Étape 6\n\nModifie les valeurs du ``|| arrays: Tableau||``.\n\nAjoute les valeurs ``|| arrays: 1,2 et 3||`` au  tableau.\n\nRegarde l'indice au besoin.\n\n```blocks\n\nlet motdepasse: number[] = []\nlet liste_de_textes = [\n\"a\",\n\"b\",\n\"c\",\n\"1\",\n\"2\",\n\"3\"\n]\n\n```\n\n## Étape 7\n\nAjoute le bloc ``|| arrays: ajoute la valeur à la fin||`` dans  le bloc ``|| input: lorsque le bouton A est pressé||``.\n\nRegarde l'indice au besoin.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    let list: number[] = []\n    list.push(0)\n})\nlet liste_de_textes = [\n\"a\",\n\"b\",\n\"c\",\n\"1\",\n\"2\",\n\"3\"\n]\nlet motdepasse: number[] = []\n\n```\n\n## Étape 8\n\nRemplace le bloc ``|| variables: liste||`` du bloc ``|| arrays: ajoute la valeur à la fin||`` par ``|| variables: motdepasse||``.\n\nClique sur la petite flèche du bloc ``|| variables: liste||`` pour le renommer.\n\nRegarde l'indice au besoin.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    motdepasse.push(0)\n})\nlet motdepasse: number[] = []\nlet liste_de_textes = [\n\"a\",\n\"b\",\n\"c\",\n\"1\",\n\"2\",\n\"3\"\n]\nmotdepasse = []\n\n```\n\n## Étape 9\n\nRemplace la valeur  ``|| arrays: 0||`` du bloc ``|| arrays: ajoute la valeur||`` par le bloc ``|| arrays: reçoit la valeur||``.\n\nRegarde l'indice au besoin.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    let liste: number[] = []\n    motdepasse.push(liste[0])\n})\nlet motdepasse: number[] = []\nlet liste_de_textes = [\n\"a\",\n\"b\",\n\"c\",\n\"1\",\n\"2\",\n\"3\"\n]\nmotdepasse = []\n\n```\n\n## Étape 10\n\nRemplace la valeur  ``|| variables: liste||`` par ``|| variables: liste de textes||`` dans le bloc ``|| arrays: ajouter la valeur||``.\n\nRegarde l'indice au besoin.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    motdepasse.push(liste_de_textes[0])\n})\nlet motdepasse: string[] = []\nlet liste_de_textes: string[] = []\nliste_de_textes = [\n\"a\",\n\"b\",\n\"c\",\n\"1\",\n\"2\",\n\"3\"\n]\nmotdepasse = []\n\n```\n\n## Étape 11\n\nRemplace la valeur  ``|| arrays: 0||`` du bloc ``|| arrays: reçoit la valeur||`` par le bloc ``|| math: choisir au hasard||``.\n\nRegarde l'indice au besoin.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    motdepasse.push(liste_de_textes[randint(0, 10)])\n})\nlet motdepasse: string[] = []\nlet liste_de_textes: string[] = []\nliste_de_textes = [\n\"a\",\n\"b\",\n\"c\",\n\"1\",\n\"2\",\n\"3\"\n]\nmotdepasse = []\n\n```\n\n## Étape 12\n\nRemplace le valeur  ``|| math: 10||`` du bloc ``|| math: choisir au hasard||`` par la valeur ``|| math: 5||``.\n\nRegarde l'indice au besoin.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    motdepasse.push(liste_de_textes[randint(0, 5)])\n})\nlet motdepasse: string[] = []\nlet liste_de_textes: string[] = []\nliste_de_textes = [\n\"a\",\n\"b\",\n\"c\",\n\"1\",\n\"2\",\n\"3\"\n]\nmotdepasse = []\n\n```\n\n## Étape 13\n\nAjoute le bloc ``|| loops: pour l'élément||`` dans  le bloc ``|| input: lorsque le bouton B est pressé||``.\n\nRegarde l'indice au besoin.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    motdepasse.push(liste_de_textes[randint(0, 5)])\n})\ninput.onButtonPressed(Button.B, function () {\n    let list: number[] = []\n    for (let valeur of list) {\n    \t\n    }\n})\nlet motdepasse: string[] = []\nlet liste_de_textes: string[] = []\nliste_de_textes = [\n\"a\",\n\"b\",\n\"c\",\n\"1\",\n\"2\",\n\"3\"\n]\nmotdepasse = []\n\n```\n\n## Étape 14\n\nRemplace la valeur ``|| variables: list||`` du bloc ``|| loops: pour l'élément||`` par la valeur ``|| variables: motdepasse||``.\n\nClique sur la flèche du bloc ``|| variables: list||`` pour modifier la valeur.\n\nRegarde l'indice au besoin.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    motdepasse.push(liste_de_textes[randint(0, 5)])\n})\ninput.onButtonPressed(Button.B, function () {\n    for (let valeur of motdepasse) {\n    \t\n    }\n})\nlet motdepasse: string[] = []\nlet liste_de_textes: string[] = []\nliste_de_textes = [\n\"a\",\n\"b\",\n\"c\",\n\"1\",\n\"2\",\n\"3\"\n]\nmotdepasse = []\n\n```\n\n## Étape 15\n\nAjoute le bloc ``|| basic: afficher texte||`` dans le bloc ``|| loops: pour l'élément||``.\n\nRegarde l'indice au besoin.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    motdepasse.push(liste_de_textes[randint(0, 5)])\n})\ninput.onButtonPressed(Button.B, function () {\n    for (let valeur of motdepasse) {\n        basic.showString(\"Hello!\")\n    }\n})\nlet motdepasse: string[] = []\nlet liste_de_textes: string[] = []\nliste_de_textes = [\n\"a\",\n\"b\",\n\"c\",\n\"1\",\n\"2\",\n\"3\"\n]\nmotdepasse = []\n\n\n```\n\n## Étape 15\n\nRemplace la valeur ``|| basic: Hello!||`` du bloc ``|| basic: afficher texte ||`` par le bloc ``|| variables: valeur||``.\n\nRegarde dans l'onglet ``|| variables: Variables||``.\n\nRegarde l'indice au besoin.\n\n```blocks\n\ninput.onButtonPressed(Button.A, function () {\n    motdepasse.push(liste_de_textes[randint(0, 5)])\n})\ninput.onButtonPressed(Button.B, function () {\n    for (let valeur of motdepasse) {\n        basic.showString(\"\" + (valeur))\n    }\n})\nlet motdepasse: string[] = []\nlet liste_de_textes: string[] = []\nliste_de_textes = [\n\"a\",\n\"b\",\n\"c\",\n\"1\",\n\"2\",\n\"3\"\n]\nmotdepasse = []\n\n```\n## Étape 16 \n\nTélécharge et teste la programmation.\n\n## @showdialog\n\nAppuie sur le bouton A cinq fois pour générer le mot de passe.\n\nAppuie sur le bouton B pour afficher le mot de passe.\n","pxt.json":"{\n    \"name\": \"Tutoriel\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"Tutoriel_image.md\",\n        \"Tutoriel_nom.md\",\n        \"Tutoriel_dessin.md\",\n        \"Tutroriel_Boutons.md\",\n        \"Tutoriel_Coeur_batant.md\",\n        \"Tutoriel_temperature.md\",\n        \"Tutoriel_Veilleuse.md\",\n        \"Tutoriel_temperature_graphique.md\",\n        \"Tutoriel_veilleuse_graphique.md\",\n        \"Tutoriel_de_a_6_face.md\",\n        \"Tutoriel_roche_papier_.md\",\n        \"Tutoriel_Decompte_musical.md\",\n        \"Tutoriel_melodie_inspirante.md\",\n        \"Tutoriel_serrure.md\",\n        \"Tutoriel_animation_et_compteur.md\",\n        \"Tutoriel_Mot_de_passe.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1730913757191}